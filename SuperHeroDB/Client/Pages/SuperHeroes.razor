@page "/superheroes"
@inject ISuperHeroService SuperHeroService
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Super Heroes</h3>

@if (SuperHeroService.Heroes.Count == 0)
{
    <span>Loading Super Heroes...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Hero Name</th>
                <th>Comic</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hero in SuperHeroService.Heroes)
            {
                <tr>
                    <td>@hero.FirstName</td>
                    <td>@hero.LastName</td>
                    <td>@hero.HeroName</td>
                    <td>@hero.Comic.Name</td>
                    <td>
                        <MatIconButton Icon="remove_red_eye"
                                       Id="mat-icon-show"
                                       @onclick="(() => ShowHero(hero.Id))">
                        </MatIconButton>
                        <MatIconButton Icon="edit"
                                       Id="mat-icon-edit"
                                       @onclick="(() => EditHero(hero.Id))">
                        </MatIconButton>
                        <MatIconButton Icon="delete"
                                       Id="mat-icon-delete"
                                       @onclick="(() => DeleteHero(hero.Id))">
                        </MatIconButton>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<EditSuperHero Hero="heroToEdit"></EditSuperHero>

@code {
    SuperHeroDB.Shared.SuperHero heroToEdit = new SuperHeroDB.Shared.SuperHero();

    protected override async Task OnInitializedAsync()
    {
        await SuperHeroService.GetSuperHeroes();
        SuperHeroService.OnChange += StateHasChanged;
    }

    void ShowHero(int id)
    {
        NavigationManager.NavigateTo($"superhero/{id}");
    }

    void EditHero(int id)
    {
        heroToEdit = SuperHeroService.Heroes.Find(c => c.Id == id);
    }

    void DeleteHero(int id)
    {
        SuperHeroService.DeleteSuperHero(id);
    }

    public void Dispose()
    {
        SuperHeroService.OnChange -= StateHasChanged;
    }
}
